<beans  
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" >


	<context:annotation-config />
	<context:component-scan base-package="org.resthub.identity" />
	<!-- Scan Spring IOC annotations for oauth2 RESThub beans -->
	
	<context:component-scan base-package="org.resthub.oauth2.filter" />
	<!--   context:component-scan base-package="org.resthub.oauth2.provider" /-->

	<!-- Spring bean used by the filter to validate incoming tokens -->
	<bean name="validationService" init-method="postInit"
		class="org.resthub.oauth2.filter.service.CachedExternalValidationService">
		<property name="accessTokenParam" value="access_token" />
		<property name="tokenInformationEndpoint" value="http://127.0.0.1:8080/identity/api/authorize/tokenDetails" />
		<property name="authorizationPassword" value="pAss?w0rd" />

		<!-- Just for CachedExternalValidationService -->
		<property name="discardPeriod" value="5" />
	</bean>
	
	<bean name="authorizationService"
		class="org.resthub.oauth2.provider.service.AuthorizationServiceImpl">
		<property name="dao" ref="tokenDao" />
		<property name="tokenLifeTime" value="5000" />
		<property name="tokenLength" value="15" />
		<property name="authenticationProviders">
			<list>
				<!-- <ref bean="mockAuthenticationService" /> -->
				<ref bean="userService" />
			</list>
		</property>
	</bean>
	
	
	<bean name="OAuth2Filter" class="org.resthub.oauth2.filter.front.OAuth2Filter" >
		<property name="service" ref="validationService"/>
	</bean>
	
	
</beans>