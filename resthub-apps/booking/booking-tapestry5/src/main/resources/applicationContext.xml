<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:hades="http://schemas.synyx.org/hades"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="org.resthub.booking" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:file:~/booking;AUTO_SERVER=TRUE" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	
	<bean id="scanningPersistenceUnitManager"
		class="org.resthub.core.context.entities.ScanningPersistenceUnitManager">
		<property name="defaultDataSource" ref="dataSource" />
		<property name="classpathPatterns"
			value="classpath*:org/resthub/**/model/*.class, 
				   classpath*:org/resthub/booking/**/model/*.class" />
	</bean>
	
		<!-- Specific JAXB resolver. -->
	<bean id="specificJAXBResolver" scope="singleton" class="org.resthub.web.jaxb.JAXBContextResolver">
		<!-- Adds here your custom patterns to your own specific @XmlRootElement classes. -->
		<property name="classpathPatterns" 
			value="	classpath*:org/resthub/**/model/*.class,
					classpath*:org/resthub/web/response/*.class,
					classpath*:org/resthub/booking/**/model/*.class" />
	</bean>

</beans>
